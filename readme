# ğŸ“¦ Chunk Processor

Um framework Python para processar arquivos CSV em chunks, com suporte a pipelines de funÃ§Ãµes, logging detalhado e arquitetura extensÃ­vel para outros formatos (Excel, Parquet, etc).

## âœ¨ Funcionalidades

âœ… Processamento em chunks (grandes arquivos sem sobrecarregar memÃ³ria)

âœ… AplicaÃ§Ã£o de pipeline de funÃ§Ãµes de transformaÃ§Ã£o por chunk

âœ… Logging automÃ¡tico: linhas processadas, valores nulos, tempo por chunk

âœ… Estrutura extensÃ­vel para outros formatos de arquivo

## ğŸ—‚ Estrutura do projeto
chunk_processor/
â”‚
â”œâ”€ chunk_processor.py        # Classe base e extensÃ£o CSV
â”œâ”€ process_script.py         # Exemplo de uso com pipeline
â””â”€ README.md                 # Este arquivo

## âš¡ InstalaÃ§Ã£o

Clone o repositÃ³rio:

git clone https://github.com/isabelamendes/chunk-processor.git
cd chunk-processor


Instale as dependÃªncias:

pip install pandas chardet

ğŸ›  Exemplo de uso

Clone o repositÃ³rio:

git clone https://github.com/seu-usuario/chunk-processor.git
cd chunk-processor


## ğŸ“– Como funciona

Leitura em chunks: cada bloco de linhas Ã© carregado em memÃ³ria de forma controlada

AplicaÃ§Ã£o de funÃ§Ãµes: pipeline de funÃ§Ãµes Ã© aplicado a cada chunk

Escrita incremental: para CSV, cada chunk processado Ã© salvo diretamente

Logging detalhado: tempo de processamento, linhas nulas, total de chunks


## ğŸ”§ Extensibilidade

Crie subclasses de ChunkProcessor para novos formatos:

Ex: ChunkProcessorExcel, ChunkProcessorParquet

Implemente os mÃ©todos abstratos:

read_chunks()

process()

O logging e o pipeline continuam funcionando sem alteraÃ§Ãµes.